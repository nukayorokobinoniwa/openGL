//2311084 久田友夢
//k2311084@gl.cc.uec.ac.jp
//作品タイトル:DbDのロゴ

//DBDのロゴを描画するプログラム
//Pythonを用いて点の座標を取得し、それらを描画した。
//その際に使えるようにdrawComplexLineという関数を作成した。

#include <GL/glut.h>
#include <vector>
#include <cmath>


int windowWidth = 600;
int windowHeight = 600;
const float topColor[] = { 0.05f, 0.06f, 0.08f };
const float bottomColor[] = { 0.2f, 0.24f, 0.3f };

void drawGradientBackground() {
    glMatrixMode(GL_PROJECTION);
    glPushMatrix();
    glLoadIdentity();
    gluOrtho2D(0.0, windowWidth, 0.0, windowHeight);

    glMatrixMode(GL_MODELVIEW);
    glPushMatrix();
    glLoadIdentity();

    // 課題の要点のグラデーションを書く
    glBegin(GL_QUADS);
    glColor3fv(topColor); // 上のグラデーション
    glVertex2i(0, 0);
    glVertex2i(windowWidth, 0);
    glColor3fv(bottomColor); // 下のグラデーション
    glVertex2i(windowWidth, windowHeight);
    glVertex2i(0, windowHeight);
    glEnd();

    glPopMatrix();

    glMatrixMode(GL_PROJECTION);
    glPopMatrix();


    glMatrixMode(GL_MODELVIEW);
}


//複雑な線を描画するために一般化した関数
void drawComplexLine(const std::vector<float>& vertices) {
    glBegin(GL_POLYGON);
    for (size_t i = 0; i < vertices.size(); i += 2) {
        glVertex2f(vertices[i], vertices[i + 1]);
    }
    glEnd();
}

void drawDbDLogo() {
    drawComplexLine({ 
        154, 156,
154, 166,
150, 180,
150, 183,
150, 184,
147, 186,
147, 192,
148, 198,
148, 208,
141, 226,
139, 232,
148, 238,
149, 241,
149, 244,
152, 261,
152, 267,
152, 273,
152, 274,
152, 283,
152, 291,
152, 292,
152, 295,
151, 304,
147, 312,
145, 318,
148, 319,
149, 322,
149, 322,
149, 324,
154, 330,
154, 331,
150, 333,
150, 343,
150, 343,
150, 348,
150, 351,
148, 363,
148, 372,
148, 376,
149, 379,
151, 375,
154, 371,
154, 359,
154, 356,
154, 347,
154, 336,
154, 336,
155, 343,
155, 348,
155, 355,
155, 367,
155, 367,
155, 369,
155, 372,
154, 373,
153, 373,
153, 378,
154, 387,
154, 394,
157, 397,
157, 397,
157, 400,
157, 414,
156, 427,
154, 441,
158, 456,
160, 465,
164, 472,
166, 475,
167, 484,
167, 485,
167, 482,
170, 474,
170, 462,
170, 455,
170, 441,
172, 422,
172, 416,
178, 393,
171, 421,
171, 427,
175, 426,
179, 405,
179, 396,
179, 389,
178, 383,
178, 369,
178, 369,
178, 359,
178, 350,
178, 350,
181, 344,
187, 336,
186, 326,
184, 312,
184, 302,
190, 290,
190, 284,
189, 279,
187, 267,
186, 254,
186, 251,
184, 246,
184, 240,
187, 237,
187, 236,
190, 227,
190, 227,
191, 210,
190, 201,
187, 200,
196, 195,
200, 189,
200, 185,
199, 171,
193, 170,
192, 164,
189, 161,
189, 163,
189, 166,
189, 161,
184, 144,
184, 126,
181, 135,
181, 144,
181, 150,
180, 157,
177, 160,
179, 149,
177, 150,
175, 149,
175, 143,
175, 147,
174, 150,
168, 156,
165, 156,
163, 156,
157, 159,
154, 168,
154, 168
    });
    
}
void drawDbDLogo2(){
    drawComplexLine({
        249, 129,
245, 129,
241, 129,
238, 129,
238, 130,
229, 130,
229, 139,
229, 145,
229, 149,
230, 158,
231, 163,
231, 170,
231, 172,
233, 175,
236, 184,
236, 190,
236, 194,
236, 200,
236, 200,
229, 209,
239, 208,
236, 212,
237, 221,
237, 229,
237, 238,
237, 241,
237, 244,
237, 251,
237, 254,
237, 262,
239, 268,
243, 332,
243, 344,
243, 347,
243, 350,
243, 353,
243, 359,
243, 361,
245, 370,
245, 374,
245, 374,
245, 383,
245, 389,
245, 404,
245, 404,
245, 415,
246, 428,
246, 439,
246, 443,
246, 454,
246, 460,
246, 466,
248, 481,
249, 481,
252, 490,
252, 499,
254, 477,
254, 469,
254, 462,
254, 454,
261, 438,
260, 436,
260, 436,
254, 416,
254, 424,
258, 412,
260, 406,
261, 402,
263, 402,
263, 396,
263, 390,
263, 366,
263, 358,
263, 352,
263, 346,
263, 339,
263, 336,
264, 336,
264, 337,
266, 346,
266, 349,
266, 353,
266, 367,
266, 367,
266, 377,
266, 382,
266, 391,
267, 387,
267, 387,
272, 381,
272, 372,
272, 367,
272, 361,
269, 346,
276, 352,
276, 353,
276, 348,
276, 346,
275, 339,
275, 339,
275, 333,
275, 321,
275, 319,
275, 319,
276, 286,
278, 277,
278, 272,
278, 272,
278, 265,
278, 258,
278, 258,
278, 258,
278, 246,
275, 240,
275, 234,
275, 229,
275, 228,
275, 220,
275, 216,
274, 211,
279, 205,
279, 202,
278, 217,
278, 218,
281, 214,
282, 213,
282, 208,
284, 202,
284, 189,
280, 189,
280, 186,
280, 186,
291, 151,
283, 161,
283, 147,
283, 141,
283, 141,
278, 135,
278, 129,
278, 123,
277, 112,
277, 106,
275, 109,
274, 116,
271, 125,
271, 128,
271, 123,
272, 118,
272, 115,
269, 114,
268, 122,
268, 124,
268, 114,
268, 102,
268, 102,
268, 100,
266, 100,
266, 101,
266, 104,
266, 106,
263, 106,
262, 110,
262, 116,
262, 119,
262, 119,
257, 124,
247, 127,
242, 127,
238, 128,
238, 130,
238, 130,
227, 139,
231, 145
    });
}
void drawDbDLogo3(){
    drawComplexLine({
        330, 114,
330, 114,
323, 131,
331, 137,
325, 142,
319, 146,
321, 154,
321, 157,
320, 173,
320, 176,
320, 181,
321, 190,
323, 200,
323, 202,
323, 214,
324, 221,
324, 227,
327, 232,
326, 244,
326, 251,
326, 257,
326, 259,
326, 263,
326, 263,
326, 268,
326, 272,
326, 280,
326, 283,
326, 290,
326, 301,
326, 304,
326, 319,
326, 331,
326, 340,
326, 347,
325, 359,
329, 365,
330, 374,
330, 380,
330, 380,
330, 383,
329, 389,
328, 394,
326, 406,
326, 412,
329, 418,
330, 421,
335, 422,
335, 422,
335, 421,
334, 418,
334, 412,
334, 408,
334, 405,
334, 399,
334, 394,
336, 398,
336, 410,
336, 415,
336, 418,
336, 419,
336, 422,
338, 433,
338, 439,
338, 445,
338, 452,
338, 460,
338, 460,
338, 454,
341, 442,
342, 442,
345, 432,
345, 426,
344, 424,
344, 420,
345, 418,
345, 415,
345, 411,
347, 402,
347, 399,
347, 394,
347, 390,
347, 385,
344, 378,
347, 366,
347, 364,
347, 361,
347, 360,
347, 352,
347, 348,
347, 340,
347, 334,
347, 334,
353, 327,
353, 327,
353, 316,
354, 309,
353, 300,
356, 289,
356, 283,
356, 283,
359, 270,
356, 275,
356, 270,
356, 264,
355, 259,
355, 258,
359, 235,
360, 241,
359, 251,
359, 256,
359, 262,
359, 275,
359, 277,
359, 277,
359, 277,
359, 259,
360, 262,
360, 252,
360, 247,
360, 244,
360, 237,
360, 237,
360, 235,
361, 223,
362, 216,
362, 210,
362, 207,
361, 205,
361, 198,
358, 189,
356, 181,
356, 178,
360, 174,
360, 174,
362, 166,
362, 166,
363, 159,
363, 159,
366, 159,
366, 156,
366, 156,
364, 151,
362, 145,
361, 144,
358, 138,
358, 138,
352, 132,
352, 129,
350, 131,
350, 133,
341, 132,
341, 132,
342, 132,
342, 126,
342, 126,
344, 121,
340, 118,
340, 127,
337, 127,
337, 127,
337, 127,
337, 121,
337, 120,
337, 112,
331, 102,
331, 106,
331, 113,
331, 113,
329, 124,
329, 133
    });
}
void drawDbDLogo4(){
    drawComplexLine({
        410, 170,
410, 170,
410, 177,
408, 180,
407, 186,
399, 195,
396, 195,
396, 204,
396, 204,
396, 204,
397, 215,
397, 221,
399, 234,
398, 242,
398, 248,
398, 258,
398, 260,
400, 279,
400, 279,
405, 279,
406, 277,
406, 281,
411, 282,
401, 303,
398, 315,
400, 326,
400, 330,
400, 330,
400, 335,
400, 335,
400, 329,
400, 328,
405, 326,
406, 320,
408, 317,
408, 314,
404, 312,
405, 326,
405, 335,
406, 342,
408, 348,
415, 363,
417, 368,
417, 380,
417, 381,
416, 387,
416, 387,
411, 393,
407, 398,
411, 410,
412, 420,
412, 429,
414, 441,
414, 458,
414, 467,
414, 470,
414, 470,
420, 467,
421, 455,
423, 455,
422, 445,
419, 434,
421, 427,
421, 427,
426, 416,
426, 413,
425, 403,
425, 398,
427, 419,
426, 432,
426, 432,
426, 432,
427, 422,
429, 407,
430, 404,
429, 401,
429, 400,
429, 395,
435, 373,
434, 373,
434, 362,
431, 358,
425, 350,
425, 347,
425, 344,
425, 341,
426, 341,
427, 340,
427, 332,
429, 331,
430, 328,
431, 325,
429, 323,
429, 320,
429, 313,
429, 305,
433, 295,
435, 286,
435, 283,
435, 277,
435, 271,
439, 296,
441, 301,
441, 281,
441, 280,
441, 275,
441, 272,
447, 263,
448, 262,
446, 238,
446, 232,
443, 227,
443, 223,
440, 221,
441, 218,
442, 215,
442, 208,
442, 200,
438, 193,
438, 193,
438, 191,
428, 188,
426, 187,
426, 187,
430, 182,
426, 173,
426, 162,
426, 161,
420, 157,
420, 152,
420, 161,
420, 168,
420, 168,
419, 171,
416, 174,
416, 174,
416, 177,
413, 177,
410, 173,
410, 173,
410, 164,
410, 164,
410, 164,
411, 168,
408, 174,
408, 174,
399, 179,
402, 186,
402, 191,
401, 195
    });
}
void drawDbDLogo5(){
    drawComplexLine({
        55, 219,
57, 219,
53, 224,
48, 229,
42, 233,
42, 235,
42, 236,
39, 242,
35, 253,
36, 257,
40, 260,
46, 266,
52, 274,
52, 274,
60, 275,
63, 275,
72, 275,
88, 280,
90, 284,
90, 284,
97, 282,
97, 282,
115, 295,
117, 295,
135, 301,
135, 302,
136, 302,
141, 302,
168, 304,
178, 307,
181, 308,
192, 308,
201, 311,
202, 313,
211, 316,
214, 316,
214, 316,
219, 322,
225, 325,
226, 325,
232, 325,
244, 332,
244, 332,
244, 332,
250, 331,
256, 331,
265, 334,
265, 334,
270, 334,
273, 335,
285, 334,
288, 334,
289, 337,
292, 341,
298, 343,
298, 346,
298, 350,
306, 348,
306, 348,
315, 350,
322, 348,
324, 348,
324, 348,
324, 349,
328, 350,
345, 358,
348, 359,
349, 362,
352, 362,
355, 358,
361, 359,
378, 360,
379, 358,
382, 359,
387, 361,
391, 365,
391, 365,
406, 363,
408, 363,
418, 358,
420, 358,
427, 364,
433, 365,
445, 368,
451, 371,
460, 370,
468, 374,
469, 376,
480, 376,
481, 373,
480, 372,
476, 364,
473, 358,
475, 361,
483, 367,
492, 367,
492, 367,
505, 368,
511, 370,
520, 373,
523, 373,
541, 377,
547, 380,
552, 380,
561, 379,
567, 378,
566, 378,
564, 376,
549, 369,
543, 366,
539, 366,
528, 363,
519, 360,
506, 358,
500, 354,
491, 348,
483, 348,
471, 346,
468, 342,
468, 340,
468, 339,
453, 343,
452, 340,
447, 339,
441, 336,
435, 334,
419, 328,
405, 324,
405, 324,
390, 318,
390, 320,
386, 320,
386, 320,
377, 313,
374, 313,
368, 315,
357, 306,
354, 306,
345, 303,
336, 303,
330, 303,
320, 303,
318, 297,
318, 297,
308, 292,
305, 292,
303, 283,
293, 283,
290, 280,
273, 276,
267, 276,
261, 273,
242, 273,
236, 274,
234, 268,
233, 265,
231, 265,
228, 268,
222, 268,
213, 262,
212, 262,
209, 262,
203, 262,
203, 262,
191, 258,
191, 258,
189, 258,
179, 250,
173, 253,
173, 254,
165, 252,
153, 249,
153, 249,
149, 249,
120, 252,
127, 250,
126, 250,
122, 247,
113, 246,
111, 244,
108, 240,
105, 237,
102, 239,
102, 241,
95, 241,
95, 237,
93, 234,
84, 229,
81, 229,
77, 220,
77, 221,
66, 221,
62, 222,
56, 223,
56, 224,
53, 226,
44, 227,
41, 233
    });
}




void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    drawGradientBackground();

    glColor3f(1.0f, 1.0f, 1.0f);
    
    drawDbDLogo();
    drawDbDLogo2();
    drawDbDLogo3();  
    drawDbDLogo4();
    drawDbDLogo5();

    glutSwapBuffers();
}


void init() {
    glEnable(GL_BLEND);
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
    glEnable(GL_LINE_SMOOTH);
    glEnable(GL_POLYGON_SMOOTH);
    glHint(GL_LINE_SMOOTH_HINT, GL_NICEST);
    glHint(GL_POLYGON_SMOOTH_HINT, GL_NICEST);
    glDisable(GL_DEPTH_TEST);
}



void reshape(int w, int h) {
    windowWidth = w;
    windowHeight = h > 0 ? h : 1;
    glViewport(0, 0, windowWidth, windowHeight);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();

    gluOrtho2D(0, windowWidth, windowHeight, 0);
    
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_MULTISAMPLE);
    glutInitWindowSize(windowWidth, windowHeight);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("DBD Logo");
    init();
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    glutMainLoop();
    return 0;
}
